name: ci

on:
  push:
    branches:
      - "main"

env:
  DB: sigma
  DBUSER: sigma
  DBPASS: sigmadb
  WILD_USER: admin
  WILD_PASSWORD: admin
  USER: enrique
  PASSWORD: 123456

jobs:
  get_modified:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      pull-requests: read
    outputs:
      FILES_MODIFIED: ${{ steps.set_files.outputs.FILES_MODIFIED }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get changed files manually
        run: |
          cd container
          files_list="$(git diff --name-only ${{ github.event.before }} HEAD | xargs)"
          echo '# Files with git command' >> "${GITHUB_STEP_SUMMARY}"
          echo '' >> "${GITHUB_STEP_SUMMARY}"
          echo '```' >> "${GITHUB_STEP_SUMMARY}"

          for file in ${files_list}; do
            echo "$file was changed" >> "${GITHUB_STEP_SUMMARY}"
          done

          echo '```' >> "${GITHUB_STEP_SUMMARY}"

          printf 'THE_FILES=%s\n' "${files_list}" >> "${GITHUB_ENV}"

      - name: Get docker files modified
        shell: python
        run: |
          import os
          os.chdir('./container')
          files = os.environ.get("THE_FILES").split(' ')

          with open(".dockerignore", 'r') as f:
            for line in f:
              # Elimino ficheros que esten en el .dockerignore de la lista
              try:
                files.remove(line.rstrip('\n'))
              except ValueError:
                print(line.rstrip('\n') + " not changed")

          # Elimino string nulo en el caso de que lo haya
          try:
            files.remove('')
          except ValueError:
            pass

          with open(os.environ.get("GITHUB_ENV"), 'a') as f:
            f.write('FILES_MODIFIED=' + str(len(files)) + '\n')

      - name: Set files modified as output
        id: set_files
        run: |
          echo "FILES_MODIFIED=${FILES_MODIFIED}" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    # Solo ejecuto el build + push si he cambiado algo del build context
    if: ${{ needs.get_modified.outputs.FILES_MODIFIED > 0 }}
    needs: get_modified
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./container
          file: ./container/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/entorno:latest
          build-args: |
              db=${{ env.DB }}
              dbuser=${{ env.DBUSER }}
              dbpass=${{ env.DBPASS }}
              wild_user=${{ env.WILD_USER }}
              wild_password=${{ env.WILD_PASSWORD }}
              USER=${{ env.USER }}
              PASSWORD=${{ env.PASSWORD }}
