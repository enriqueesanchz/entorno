# encoding: utf-8
# -*- mode: ruby -*-
# vi: set ft=ruby :
# Box / OS
VAGRANT_BOX = 'bento/debian-10'
VM_NAME = 'cloud'

Vagrant.configure(2) do |config|
  config.vm.box = VAGRANT_BOX
  config.vm.hostname = VM_NAME
  config.vm.provider "virtualbox" do |v|
    v.name = VM_NAME
    v.memory = 2048
  end

  # VNC and email server ports
  config.vm.network "forwarded_port", guest: 5901, host: 6901
  config.vm.network "forwarded_port", guest: 25, host: 25

  # Create sigma user
  config.vm.provision "shell", inline: "groupadd sigma -g 1001;
  useradd sigma -u 1001 -g 1001 -s /bin/bash"

  # Copy static files
  config.vm.provision "file", source: "./packages", destination: "/tmp/packages"
  config.vm.provision "shell", inline: "cp -r /tmp/packages / && rm -rf /tmp/packages"
  config.vm.provision "file", source: "./config", destination: "/tmp/config"
  config.vm.provision "shell", inline: "cp -r /tmp/config / && rm -rf /tmp/config"
  config.vm.provision "file", source: "./static", destination: "/tmp/static"
  config.vm.provision "shell", inline: "cp -r /tmp/static/* / && rm -rf /tmp/static"

  # Mount mariadb files on host
  config.vm.network "private_network", type: "dhcp"
  config.vm.synced_folder "./volumes/var/lib/mysql", "/var/lib/mysql", type: "nfs",
    create: true, nfs_udp: false, :linux__nfs_options => ["rw", "no_root_squash"]
  config.vm.provision "shell", inline: "useradd -M mysql"
  config.vm.provision "shell", inline: "chown mysql:mysql /var/lib/mysql"

  # Mount other volumes
  config.vm.synced_folder "./volumes/opt/wildfly", "/opt/wildfly", create: true
  config.vm.synced_folder "./volumes/etc/apache2", "/etc/apache2", create: true
  config.vm.synced_folder "./volumes/home/sigma", "/home/sigma", create: true,
    mount_options: ["uid=1001", "gid=1001"]
  config.vm.synced_folder "./volumes/var/lib/mysql", "/var/lib/mysql", create: true
  config.vm.synced_folder "./volumes/etc/openfortivpn", "/etc/openfortivpn", create: true
  config.vm.synced_folder "./volumes/code", "/code", create: true,
    mount_options: ["uid=1001", "gid=1001"]

  # Create environment
  config.vm.provision "shell", path: "provision.sh"

  # Entrypoint
  config.vm.provision "shell", run: "always", path: "init.sh",
    env: {"tigervncpasswd" => ENV["tigervncpasswd"],
          "vpn_user" => ENV["vpn_user"],
          "vpn_password" => ENV["vpn_password"]}
end

